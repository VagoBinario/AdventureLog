@using Data

@typeparam TItem where TItem : DbObject, new ()

<h1>@Title</h1>

<button @onclick="Add">Add task</button>

<CollectionLayout Collection=@Collection TItem=TItem>
    <ItemInCollection> 
        <FormBase TItem=TItem Model=@context OnModelDelete="(x) => OnDelete(x)" >
            <FormInputData>
                @ModelEditTemplate(@context)
            </FormInputData>
        </FormBase>
    </ItemInCollection>
</CollectionLayout>

@code{
    [Parameter] public ICollection<TItem> Collection { get; set; }
    [Parameter] public RenderFragment Title { get; set; }
    [Parameter] public RenderFragment<TItem> ModelEditTemplate { get; set; }
    [Parameter] public IDbObjectFactory<TItem> dbObjectFactory { get; set; }
    [Parameter] public EventCallback<TItem> ModelDeleteCallback{ get; set; }

    void Add()
    {
        Collection.Add(dbObjectFactory.NewInstance());
    }

    void OnDelete(TItem entity)
    {
        ModelDeleteCallback.InvokeAsync(entity);
    }
}